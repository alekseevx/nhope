stages:
  - build
  - test

build:linux:
  stage: build
  tags:
    - docker
    - build
  image: ubuntu:20.04-build
  script:
    - mkdir build && cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCOVERAGE_ENABLED=ON -DADDRESS_SANITIZER_ENABLED=ON
    - cmake --build .
  artifacts:
    paths:
      - build/
      - build/tests

test:linux:
  stage: test
  tags:
    - docker
    - test
  image: ubuntu:20.04-build
  script:
    - cd build
    - cmake --build . --target coverage
    - cd ..
    - gcovr --xml-pretty --print-summary --exclude-unreachable-branches -e .deps -e tests -e benchs -o coverage.xml --root .

  coverage: /^\s*lines:\s*\d+.\d+\%/
  artifacts:
    name: ${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
    paths:
      - build/coverage
    reports:
      cobertura: coverage.xml

build:windows:
  stage: build
  tags:
    - windows
    - build
  script:
    - mkdir build 
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release .. 
    - cmake --build .
  artifacts:
    paths:
      - build/Debug/tests.exe

test:windows:
  stage: test
  tags:
    - windows
    - test
  script:
    - cd build/Debug
    - ./tests.exe

# benchmark-job:
#   stage: test
#   image: ubuntu:20.04-build
#   script:
#     - ./build/benchs
